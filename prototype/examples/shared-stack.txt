//FIXME PLACE HOLDER

// Shared Stack example.
// The stack implementation is in the Old Examples tab. In here we assume such
// type and proceed to share it.

import println

typedef Stack = forall T.( [] -o (exists E.exists NE.(![
	push : T :: ( E (+) NE ) -o [] :: NE,
	pop : [] :: NE -o T :: ( E (+) NE ),
	isEmpty : [] :: ( E (+) NE ) -o  Empty#([]::E) + NonEmpty#([]::NE),
	del : [] :: E -o [] ] :: E)) )
	
// Sharing protocols
typedef P = forall NE.forall E.( ( NE (+) E ) => NE ; ( rec X.( NE => NE ; X ) ) )

fun( newStack : Stack ).
	let s1 = (newStack[int]) {} in
		open <E,s2> = s1 in
			open <NE,stack> = s2 in 
				// initial sharing
				share E as (P[NE][E]) || (P[NE][E]);
				// continued sharing...
				share (P[NE][E]) as (P[NE][E]) || (P[NE][E]);
				0
				//TODO
			end
		end
	end
